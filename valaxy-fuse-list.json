[{"title":"","tags":[],"categories":[],"author":"仔仔","excerpt":"# 更新日志\n\n## 2024-09-05\n- 完成: rust-stack\n- 完成: lua-stack\n- 完成: frontend-stack\n- 完成: business-stack\n- 完","link":"/posts/changes"},{"title":"商务","tags":["商务"],"categories":["商务"],"author":"仔仔","excerpt":"\n","link":"/posts/business"},{"title":"Java","tags":["java"],"categories":["java技术栈"],"author":"仔仔","excerpt":"\n\n- [官网](https://developer.oracle.com/java/)\n","link":"/posts/java-stack"},{"title":"接单注意事项","tags":["商务"],"categories":["商务","合作"],"author":"仔仔","excerpt":"\n## abo\n臭名昭著的一套代码模式，充斥在各个编程语言，严重扰乱市场，质量堪忧。\n\n- 架构设计有问题，都是单表操作，一旦夸表发现很难更改，维护困难\n- 数据表是中文拼音命名\n- 前端nodejs","link":"/posts/business/cooperation/faq"},{"title":"商务合作说明","tags":["商务"],"categories":["商务","合作"],"author":"仔仔","excerpt":"\n## 个人履历\n本人拥有7年以上开发经验，全栈型工程师，擅长web开发，目前就职于一家在线教育公司。\n\n## 个人技能 \n- java python golang php rust c c++ sh","link":"/posts/business/cooperation"},{"title":"前端接单案例","tags":["商务"],"categories":["商务","合作","接单"],"author":"仔仔","excerpt":"\n","link":"/posts/business/job-case/frontend-case"},{"title":"接单案例","tags":["商务"],"categories":["商务","合作","接单"],"author":"仔仔","excerpt":"\n","link":"/posts/business/job-case"},{"title":"java接单案例","tags":["商务"],"categories":["商务","合作","接单"],"author":"仔仔","excerpt":"\n\n\n## Jsp+Servlet\n- jsp+servlet 登录+对用户信息的增删改查\n- jsp+servlet 对学生信息的增删改查\n- jsp+servlet 冰雪旅游网[黑马旅游网改编过来","link":"/posts/business/job-case/java-case"},{"title":"Mysql集群接单案例","tags":["商务"],"categories":["商务","合作","接单"],"author":"仔仔","excerpt":"\n","link":"/posts/business/job-case/mysql-cluster-case"},{"title":"python接单案例","tags":["商务"],"categories":["商务","合作","接单"],"author":"仔仔","excerpt":"\n","link":"/posts/business/job-case/python-case"},{"title":"Hibernate","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/hibernate"},{"title":"","tags":[],"categories":[],"author":"仔仔","excerpt":"# Spring面试问题\n\n## 1.@Autowired和@Resource区别?\n\n#### @Autowired\n\n- @AutoWired是spring中注解，主要是使用类型来进行注入\n- 注","link":"/posts/java-stack/interview"},{"title":"","tags":[],"categories":[],"author":"仔仔","excerpt":"# java基础面试问题\n\n## 1.ThreadLocal原理？\n\n## 2.HashMap原理？\n\n## 3.ArrayList原理？\n\n## 4.ConcurrentHashMap原理？\n\n##","link":"/posts/java-stack/interview/java"},{"title":"","tags":[],"categories":[],"author":"仔仔","excerpt":"# Spring 面试问题\n\n## @Autowired和@Resource区别?\n\n#### @Autowired\n\n- @AutoWired是spring中注解，主要是使用类型来进行注入\n- 注解","link":"/posts/java-stack/interview/spring"},{"title":"java基础","tags":["java"],"categories":["java技术栈","java基础"],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-base"},{"title":"java日志","tags":["java"],"categories":["java技术栈","java日志"],"author":"仔仔","excerpt":"","link":"/posts/java-stack/java-log"},{"title":"java-web","tags":["java"],"categories":["java技术栈","java-web"],"author":"仔仔","excerpt":"","link":"/posts/java-stack/java-web"},{"title":"JDBC","tags":["java"],"categories":["java技术栈","jdbc"],"author":"仔仔","excerpt":"","link":"/posts/java-stack/jdbc"},{"title":"jdbc连接","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n不同版本可能连接参数不同，主要表现是驱动不同。\n\n## mysql8.0以前\n```text\ndriverClassName=com.mysql.jdbc.Driver\nurl=jdbc:mysq","link":"/posts/java-stack/jdbc/jdbc-connection"},{"title":"JPA","tags":["java"],"categories":["java技术栈","JPA"],"author":"仔仔","excerpt":"","link":"/posts/java-stack/jpa"},{"title":"Maven","tags":["java"],"categories":["java技术栈","Maven"],"author":"仔仔","excerpt":"\n\n- [官网](https://developer.oracle.com/java/)","link":"/posts/java-stack/maven"},{"title":"Mybatis","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [官方文档](https://mybatis.org/mybatis-3/zh/configuration.html)\n- [参考](https://www.kuangstudy.com/zl","link":"/posts/java-stack/mybatis"},{"title":"Mybatis 详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [mybatis getting-started](https://mybatis.org/mybatis-3/zh_CN/getting-started.html)\n\n## 构成\n- myb","link":"/posts/java-stack/mybatis/mybatis-intro"},{"title":"mybatis懒加载","tags":[],"categories":[],"author":"仔仔","excerpt":"\n## 全局设置\n```xml\n<settings>\n   <!--设置为 true 启用延迟加载，默认为 false。当设置为 true 时，MyBatis 将延迟加载对象的属性。-->\n  <se","link":"/posts/java-stack/mybatis/mybatis-lazy-load"},{"title":"mybatis-config.xml","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [mybatis-config.xml](https://mybatis.org/mybatis-3/zh_CN/configuration.html)\n- [mybatis sqlmap](","link":"/posts/java-stack/mybatis/mybatis-xml"},{"title":"打印sql日志","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## 方案一\n```yaml\n# application.yml\nmybatis:\n  configuration:\n    log-impl: org.apache.ibatis.loggin","link":"/posts/java-stack/mybatis/print-sql"},{"title":"Mybatis-Flex","tags":["java"],"categories":["java技术栈","Mybatis-Flex"],"author":"仔仔","excerpt":"\n- [官方文档](https://mybatis-flex.com/)\n","link":"/posts/java-stack/mybatis-flex"},{"title":"Mybatis-Plus","tags":["java"],"categories":["java技术栈","Mybatis-Plus"],"author":"仔仔","excerpt":"\n- [官方文档](https://baomidou.com/)\n","link":"/posts/java-stack/mybatis-plus"},{"title":"@Configuration 注解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## @Configuration","link":"/posts/java-stack/spring/Configuration"},{"title":"常用注解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## @Component\n该注解用于将一个类标识为组件（Component）。它是通用的注解，表示一个普通的 Spring 组件。被 @Component 注解标记的类将由 Spring 自动","link":"/posts/java-stack/spring/annotation-intro"},{"title":"applicationContext.xml详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## beans 标签\n```xml\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"h","link":"/posts/java-stack/spring/applicationContext-xml-intro"},{"title":"@Autowired @Resource区别","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## @Autowired\n- spring框架提供\n- 可以标注在属性上、方法上和构造器上，来完成自动装配\n- 默认是根据属性类型注入，byType\n- 当接口有多个实现类的时候，需要搭配@Q","link":"/posts/java-stack/spring/autowired-resource-diff"},{"title":"什么是bean","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\nJava Bean就是一种类，并非所有的类都是 Java Bean，其是一种特殊的类，具有以下特征：\n\n- 提供一个默认的无参构造函数。\n- 需要被序列化并且实现了 Serializable 接","link":"/posts/java-stack/spring/bean%E4%BB%8B%E7%BB%8D%20copy"},{"title":"Spring","tags":["java"],"categories":["java技术栈","Spring"],"author":"仔仔","excerpt":"\n- [spring](https://start.spring.io/)\n\n## 版本\n通常版本介绍会在官网的overview中说明，例如[去查看](https://docs.spring.io/s","link":"/posts/java-stack/spring"},{"title":"常用注解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n\n## @Bean\n用在方法上，将当前方法的返回值对象放到容器当中！可以理解为前者是由spring自动创建对象，而@Bean创建对象是交给我们自己来控制。\n\n@Bean一般出现在方法上面，也可用","link":"/posts/java-stack/spring/integration-myabtis"},{"title":"常用包介绍","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## spring-context\n```xml\n<!-- https://mvnrepository.com/artifact/org.springframework/spring-conte","link":"/posts/java-stack/spring/jar-intro"},{"title":"bean对象生命周期","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n- 调用无参构造，创建bean对象\n- 调用set方法设置bean对象的属性\n- bean后置处理器(初始化前)\n- bean对象初始化(调用指定初始化方法)\n- bean后置处理器(初始化后)","link":"/posts/java-stack/spring/lifecycle"},{"title":"事务传播","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## Propagation.REQUIRED\nSpring默认传播行为是reuqired\n当前有事务，使用当前事务\n当前没有事务，创建新事物，即保证当前方法在事务中\n\n## Propagati","link":"/posts/java-stack/spring/transaction-propagation"},{"title":"@Transcation注解事务不生效场景","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## 数据库引擎不支持事务\nmysql的ISAM不支持事务\n\n## 被注解的方法为私有方法private\nSpring的事务代理通常是通过Java动态代理或CGLIB动态代理生成的，这些代理要求","link":"/posts/java-stack/spring/transcation-annotation-invalid-scene"},{"title":"数据校验","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/spring/valid"},{"title":"SpringCloud","tags":["java"],"categories":["java技术栈","SpringCloud"],"author":"仔仔","excerpt":"","link":"/posts/java-stack/spring-cloud"},{"title":"常用注解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## @Controller\n用来定义一个controller类\n\n## @RestController\n用来定义一个RestController类，相当于同时使用了@Controller和@R","link":"/posts/java-stack/spring-mvc/annotation-intro"},{"title":"常见问题","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## conflicts with existing, non-compatible bean definition of same name and class\nSpringMVC中所有的be","link":"/posts/java-stack/spring-mvc/faq"},{"title":"SpringMVC","tags":["java"],"categories":["java技术栈","SpringMVC"],"author":"仔仔","excerpt":"\n\n- [spring](https://start.spring.io/)","link":"/posts/java-stack/spring-mvc"},{"title":"SpringMVC整体流程","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- 创建一个java工程\n- 引入spring相关jar包\n- 创建web.xml文件，配置DispatcherServlet\n- 创建SpringMVC配置文件，配置SpringMVC相关参数\n","link":"/posts/java-stack/spring-mvc/springmvc-flow"},{"title":"SpringMVC-web-xml详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n## web.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/n","link":"/posts/java-stack/spring-mvc/springmvc-web-xml-intro"},{"title":"SpringMVC-xml详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n\n## springmvc-servlet.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.","link":"/posts/java-stack/spring-mvc/springmvc-xml-intro"},{"title":"Spring Boot 常用命令","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## mvn开启spring boot服务\n```shell\nmnvw spring-boot:run --quiet\n# 或者\nmnvw.cmd spring-boot:run --quiet","link":"/posts/java-stack/springboot/command"},{"title":"SpringBoot","tags":["java"],"categories":["java技术栈","SpringBoot"],"author":"仔仔","excerpt":"\n\n- [spring](https://start.spring.io/)","link":"/posts/java-stack/springboot"},{"title":"如何使用Thymeleaf","tags":["java"],"categories":["java技术栈","Thymeleaf"],"author":"仔仔","excerpt":"\n## 如何使用？\n\n## 新版本\n### 引入jar\n```xml\n <!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf ","link":"/posts/java-stack/thymeleaf/how-to-use"},{"title":"Thymeleaf","tags":["java"],"categories":["java技术栈","Thymeleaf"],"author":"仔仔","excerpt":"\n- [官网](https://www.thymeleaf.org/)","link":"/posts/java-stack/thymeleaf"},{"title":"","tags":[],"categories":[],"author":"仔仔","excerpt":"# dokcer安装tomcat\n- [tomcat github](https://github.com/apache/tomcat/tree/main/conf)\n\n## 修改\n### manag","link":"/posts/java-stack/tomcat/docker-install-tomcat"},{"title":"设置UTF-8编码","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## 启动增加参数\n```shell\n-Dfile.encoding=UTF-8\n# 或者\nCATALINA_OPTS=\"$CATALINA_OPTS -Dfile.encoding=UTF-8","link":"/posts/java-stack/tomcat/how-to-setup-utf8"},{"title":"Tomcat","tags":["java"],"categories":["java技术栈","Tomcat"],"author":"仔仔","excerpt":"\n- [tomcat官网](https://tomcat.apache.org/)","link":"/posts/java-stack/tomcat"},{"title":"","tags":[],"categories":[],"author":"仔仔","excerpt":"# windows安装tomcat\n- [官网](https://tomcat.apache.org/)\n\n## 下载\ntomcat 9\n```shell\nhttps://dlcdn.apache.o","link":"/posts/java-stack/tomcat/windows-install-tomcat"},{"title":"环境搭建","tags":["java"],"categories":["java技术栈","java基础","环境搭建"],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-base/build-env"},{"title":"jdk环境变量","tags":["java","jdk"],"categories":["java技术栈","java基础","环境搭建"],"author":"仔仔","excerpt":"\n\n\n## Java Path\nJava Path 通常指的是JDK的安装路径。JDK是Java Development Kit的缩写，它包含了Java编译器、Java运行时环境以及一些工具，如Jav","link":"/posts/java-stack/java-base/build-env/jdk-environment-variable"},{"title":"jdk介绍","tags":["java","jdk"],"categories":["java技术栈","java基础","环境搭建"],"author":"仔仔","excerpt":"\n\n\n## 各厂家jdk区别\n- OpenJDK\n​OpenJDK 是 JDK 的社区版，社区主要由Oracle主导，免费。\n\n- Oracle JDK\n​Oracle JDK 是Java官方Orac","link":"/posts/java-stack/java-base/build-env/jdk-introduce"},{"title":"jenv","tags":["java","jdk"],"categories":["java技术栈","java基础","环境搭建"],"author":"仔仔","excerpt":"\n\n- [jenv 官网](https://www.jenv.be/)\n- [jenv github](https://github.com/jenv/jenv)\n\nLinux环境下Java多版本管理","link":"/posts/java-stack/java-base/build-env/jenv"},{"title":"Linux安装jdk","tags":["java","jdk"],"categories":["java技术栈","java基础","环境搭建"],"author":"仔仔","excerpt":"\n假设已下载好安装包。\n\n## 如何安装\n```shell\ntar -zxvf xxx.tar.gz\n\nmv java-se-8u41-ri /usr/local/java8/\n```\n\n## 添加环","link":"/posts/java-stack/java-base/build-env/linux-install-jdk"},{"title":"mac-m3安装jdk","tags":["java","jdk"],"categories":["java技术栈","java基础","环境搭建"],"author":"仔仔","excerpt":"\n- [oracle官网](https://www.oracle.com/cn/java/technologies/downloads/archive/)\n\n登录到oracle官网，把安装包下载好。\n","link":"/posts/java-stack/java-base/build-env/mac-m3-install-jdk"},{"title":"windows安装jdk","tags":["java","jdk"],"categories":["java技术栈","java基础","环境搭建"],"author":"仔仔","excerpt":"\n\n- [adoptium](https://adoptium.net/zh-CN/temurin/releases/)\n- [openlogic](https://www.openlogic.com","link":"/posts/java-stack/java-base/build-env/windows-install-jdk"},{"title":"异常介绍","tags":["java"],"categories":["java技术栈","java基础","异常"],"author":"仔仔","excerpt":"\n\n\n\n## Unchecked Exception\nUnchecked exception 是指在编译时并不要求必须处理的异常。\n\nUnchecked exception 包括 RuntimeExc","link":"/posts/java-stack/java-base/exception/exception-intro"},{"title":"异常","tags":["java"],"categories":["java技术栈","java基础","异常"],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-base/exception"},{"title":"Files.copy","tags":["java"],"categories":["java技术栈","java基础","函数工具"],"author":"仔仔","excerpt":"\n\n\n可以使用 Files 工具类的 copy(Path source,Path target,CopyOption... options) 拷贝文件或者目录。\n如果目标文件存在，那么赋值将失败，除非","link":"/posts/java-stack/java-base/fn-utils/Files-copy"},{"title":"函数工具","tags":["java"],"categories":["java技术栈","java基础","函数工具"],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-base/fn-utils"},{"title":"小知识","tags":["java"],"categories":["java技术栈","java基础","小知识"],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-base/knowledge-snack"},{"title":"javax与jakarta区别","tags":["java"],"categories":["java技术栈","java基础","小知识"],"author":"仔仔","excerpt":"\n\n\nJavaEE被Oracle捐献给Apache了。目前最高版本是 JavaEE8；\n\nApache把JavaEE换名了，以后不叫JavaEE了，以后叫做 jakarta EE。\n\n以后没有Java","link":"/posts/java-stack/java-base/knowledge-snack/javax-jakarta-diff"},{"title":"properties文件","tags":["java"],"categories":["java技术栈","java基础","小知识"],"author":"仔仔","excerpt":"\n\n默认编码为ISO-8859-1, 只能写一些简单字符。","link":"/posts/java-stack/java-base/knowledge-snack/properties-intro"},{"title":"jcl","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n","link":"/posts/java-stack/java-log/jcl"},{"title":"jul","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-log/jul"},{"title":"jul 详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\njava.util.logging\n\nUL全称Java util Logging是java原生的日志框架，使用时不需要另外引用第三方类库，相对其他日志框\n架使用方便，学习简单，能够在小型应用中灵活","link":"/posts/java-stack/java-log/jul/jul-intro"},{"title":"log4j","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n已成为历史","link":"/posts/java-stack/java-log/log4j"},{"title":"log4j2","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n","link":"/posts/java-stack/java-log/log4j2"},{"title":"log4j2详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [log4j2官网](https://logging.apache.org/log4j/2.12.x/manual/appenders.html)","link":"/posts/java-stack/java-log/log4j2/log4j2-intro"},{"title":"logback","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [logback官网](https://logback.qos.ch/)","link":"/posts/java-stack/java-log/logback"},{"title":"logback详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\nLogback是Log4j项目的继承者，由Log4j创始人Ceki Gülcü基于过去十年企业级日志系统设计经验打造。Logback比目前所有已存的日志系统要快，它提供了其它日志系统缺失的独特和有","link":"/posts/java-stack/java-log/logback/logback-intro"},{"title":"slf4j","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n用来替代JCL的又一抽象实现。","link":"/posts/java-stack/java-log/slf4j"},{"title":"slf4j详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\nSLF4J 是一个为Java提供简单日志的门面。它并不是一个具体的日志实现，而是提供了一个通用的API，允许开发者选择底层的日志框架。\n\n","link":"/posts/java-stack/java-log/slf4j/slf4j-intro"},{"title":"IDEA创建javaweb项目","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## org.apache.maven.archetypes:maven-archetype-webapp\n使用maven插件创建出来的项目web.xml版本过低，需要修改\n\nWEB-INF/w","link":"/posts/java-stack/java-web/base/IDEA-new-project"},{"title":"基础","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-web/base"},{"title":"javaweb基础概念详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## WEB-INF目录\nWEB-INF目录是一个重要的安全区域，其中包含了所有对客户端不可见的文件和资源。\n\n这些资源包括web.xml配置文件、class文件、JAR文件、数据库配置文件等。","link":"/posts/java-stack/java-web/base/java-web-intro"},{"title":"web.xml详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\nWeb.xml是Java Web项目中的一个配置文件，主要用于配置首页、Filter、Listener、Servlet等。\n\ntomcat在部署启动web应用时，会解析加载${CATALINA_H","link":"/posts/java-stack/java-web/base/web-xml-intro"},{"title":"webapp详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## 文件上传下载\nwebapp目录下的文件和文件夹在build的时候，如果不是空的，会自动打包。\n\n尤其是上传下载功能的时候，不需要额为配置build","link":"/posts/java-stack/java-web/base/webapp-intro"},{"title":"cookie详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-web/cookie/cookie-intro"},{"title":"Cookie","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-web/cookie"},{"title":"Filter","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-web/filter"},{"title":"EL表达式","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- 使得JSP写起来更简单，简洁，主要用于获取作用域中的数据\n- 用来替换作用域对象.getAttribute(\"name\")\n\n\n## 基本应用\n- ${scope.name}获取具体某个作用域","link":"/posts/java-stack/java-web/jsp/el-intro"},{"title":"JSP","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\nJSP（全称Java Server Pages）是由Sun Microsystems公司主导创建的一种动态网页技术标准。","link":"/posts/java-stack/java-web/jsp"},{"title":"内置对象","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\njsp自动创建的对象，可以直接使用\n\n## 内置对象\n- request, javax.servlet.http.HttpServletRequest\n- response, javax.serv","link":"/posts/java-stack/java-web/jsp/jsp-built-in-objects"},{"title":"JSP指令","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## JSP 指令的种类\nJSP 指令可以分为以下几种类型：\n\n- 页面指令（Page Directive）：用于设置页面级属性，如语言、错误页面和缓冲区大小。\n- 包含指令（Include D","link":"/posts/java-stack/java-web/jsp/jsp-command"},{"title":"JSP语法","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## 原理\ntomcat等web容器会把jsp文件编译为.class文件运行，最终将响应结果返回给客户端。\n\nJSP本质上就是一个servlet类，编译器会编译成servlet代码，查看字节码就","link":"/posts/java-stack/java-web/jsp/jsp-intro"},{"title":"JSTL","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [oracle jstl](https://www.oracle.com/java/technologies/jstl.html)\n- [apache taglibs](https://tom","link":"/posts/java-stack/java-web/jsp/jstl-intro"},{"title":"Listener","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-web/listener"},{"title":"监听器详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- ServletContextAttributeListener 用来感知ServlerContext对象属性变化，比如添加或删除属性变化\n- ServletContextListener 用来","link":"/posts/java-stack/java-web/listener/listener-intro"},{"title":"servlet 注解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## \"@WebServlet\"\n```java\n@WebServlet(urlPatterns = \"/hello\")\n```\n\n## \"@MultipartConfig\"\n该注解只能用于se","link":"/posts/java-stack/java-web/servlet/annotation"},{"title":"servlet 内置方法","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## 生命周期\n```text\n1.加载，实例化。默认情况下第一次访问才会被创建，可以通过配置修改loadOnStartUp=1\n    1.负整数：第一次访问创建\n    2.正整数或0：服务","link":"/posts/java-stack/java-web/servlet/built-in-fn"},{"title":"servlet 内置对象","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## ServletConfig\n","link":"/posts/java-stack/java-web/servlet/built-in-objects"},{"title":"Servlet","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/java-web/servlet"},{"title":"xml方式定义","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n## 示例\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/j","link":"/posts/java-stack/java-web/servlet/xml-define"},{"title":"c3p0详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [c3p0官网](https://www.mchange.com/projects/c3p0/)\n\n## 如何连接数据库\n\n### 直接代码编写参数配置\n\n### 配置文件\n文件名固定就叫 c","link":"/posts/java-stack/jdbc/c3p0/c3p0-intro"},{"title":"commons-dbutils","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [commons-dbutils](https://commons.apache.org/proper/commons-dbutils/)","link":"/posts/java-stack/jdbc/c3p0"},{"title":"commons-dbutils FAQ","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n\n\n## java.math.BigInteger cannot be cast to java.lang.Long\n```java\n@Test\n    public void testInser","link":"/posts/java-stack/jdbc/commons-dbutils/FAQ"},{"title":"commons-dbutils详解","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [commons-dbutils](https://commons.apache.org/proper/commons-dbutils/)\n\n\n## API介绍\n\n### QueryRunne","link":"/posts/java-stack/jdbc/commons-dbutils/commons-dbutils-intro"},{"title":"commons-dbutils","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [commons-dbutils](https://commons.apache.org/proper/commons-dbutils/)","link":"/posts/java-stack/jdbc/commons-dbutils"},{"title":"Linux安装Maven","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [maven官网下载](https://maven.apache.org/download.cgi)\n\n## 下载\n```shell\nwget https://dlcdn.apache.org","link":"/posts/java-stack/maven/build-env/Linux-install-maven"},{"title":"环境搭建","tags":[],"categories":[],"author":"仔仔","excerpt":"\n","link":"/posts/java-stack/maven/build-env"},{"title":"windows安装Maven","tags":[],"categories":[],"author":"仔仔","excerpt":"\n\n- [maven官网下载](https://maven.apache.org/download.cgi)\n\n## 下载\n```shell\nwget https://dlcdn.apache.org","link":"/posts/java-stack/maven/build-env/windows-install-maven"}]
