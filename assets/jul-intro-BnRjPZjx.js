import{_ as p}from"./ValaxyMain.vue_vue_type_style_index_0_lang-BvyuMnyR.js";import{u as g,o as v,c as h,w as l,r as t,g as e,h as i,f,p as u}from"./app-boVvO3tb.js";import"./YunComment.vue_vue_type_style_index_0_lang-CrsBtAxv.js";import"./index-C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-CFbN6BoV.js";import"./post-nLiiti9w.js";const $={__name:"jul-intro",setup(c,{expose:d}){const n=JSON.parse('{"title":"jul 详解","description":"","frontmatter":{"title":"jul 详解"},"headers":[{"level":2,"title":"架构","slug":"架构","link":"#架构","children":[]},{"level":2,"title":"日志级别","slug":"日志级别","link":"#日志级别","children":[]}],"relativePath":"pages/posts/java-stack/java-log/jul/jul-intro.md","path":"/home/runner/work/blog/blog/packages/valaxy-blog/pages/posts/java-stack/java-log/jul/jul-intro.md","lastUpdated":1732447053000}'),r=g(),s=n.frontmatter||{};return r.meta.frontmatter=Object.assign(r.meta.frontmatter||{},n.frontmatter||{}),u("pageData",n),u("valaxy:frontmatter",s),globalThis.$frontmatter=s,d({frontmatter:{title:"jul 详解"}}),(a,o)=>{const m=p;return v(),h(m,{frontmatter:f(s)},{"main-content-md":l(()=>o[0]||(o[0]=[e("p",null,"java.util.logging",-1),e("p",null,"UL全称Java util Logging是java原生的日志框架，使用时不需要另外引用第三方类库，相对其他日志框 架使用方便，学习简单，能够在小型应用中灵活使用。",-1),e("h2",{id:"架构",tabindex:"-1"},[i("架构 "),e("a",{class:"header-anchor",href:"#架构","aria-label":'Permalink to "架构"'},"​")],-1),e("ul",null,[e("li",null,[e("p",null,"Loggers：被称为记录器，应用程序通过获取Logger对象，调用其API来来发布日志信息。Logger 通常时应用程序访问日志系统的入口程序。")]),e("li",null,[e("p",null,"Appenders：也被称为Handlers，每个Logger都会关联一组Handlers，Logger会将日志交给关联 Handlers处理，由Handlers负责将日志做记录。Handlers在此是一个抽象，其具体的实现决定了 日志记录的位置可以是控制台、文件、网络上的其他日志服务或操作系统日志等。")]),e("li",null,[e("p",null,"Layouts：也被称为Formatters，它负责对日志事件中的数据进行转换和格式化。Layouts决定了 数据在一条日志记录中的最终形式。")]),e("li",null,[e("p",null,"Level：每条日志消息都有一个关联的日志级别。该级别粗略指导了日志消息的重要性和紧迫，我 可以将Level和Loggers，Appenders做关联以便于我们过滤消息。")]),e("li",null,[e("p",null,"Filters：过滤器，根据需要定制哪些信息会被记录，哪些信息会被放过。")])],-1),e("p",null,"用户使用Logger来进行日志记录，Logger持有若干个Handler，日志的输出操作是由Handler完成的。 在Handler在输出日志前，会经过Filter的过滤，判断哪些日志级别过滤放行哪些拦截，Handler会将日 志内容输出到指定位置（日志文件、控制台等）。Handler在输出日志时会使用Layout，将输出内容进 行排版。",-1),e("h2",{id:"日志级别",tabindex:"-1"},[i("日志级别 "),e("a",{class:"header-anchor",href:"#日志级别","aria-label":'Permalink to "日志级别"'},"​")],-1),e("p",null,"JUL一共有7个日志级别，用法如下：",-1),e("div",{class:"language-java vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"java"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"logger.(Level.INFO,"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"info"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")])])]),e("button",{class:"collapse"})],-1),e("ul",null,[e("li",null,"Level.SEVERE：最高级别的日志，主要记录错误信息"),e("li",null,"Level.WARNING：级别排行第二，记录警告信息"),e("li",null,"Level.INFO：级别排行第三，最常用的日志级别，记录普通消息，比如请求信息、连接信息、参数信息等等"),e("li",null,"Level.CONFIG：级别排行第四，记录配置信息，加载配置文件、读取配置参数都可以使用5. CONFIG记录"),e("li",null,"Level.FINE ：debug 时记录的 日志消息，记录运行时的状态、传递的参数等等"),e("li",null,"Level.FINER：debug 时记录的 日志消息，记录运行时的状态、传递的参数等等"),e("li",null,"Level.FINEST：debug 时记录的 日志消息，记录运行时的状态、传递的参数等等"),e("li",null,"Level.ALL：所有记录都开启"),e("li",null,"Level.OFF： 关闭日志记录")],-1),e("p",null,"其中，FINE、FINER、FINEST都是记录debug信息的，三者取其一即可；",-1)])),"main-header":l(()=>[t(a.$slots,"main-header")]),"main-header-after":l(()=>[t(a.$slots,"main-header-after")]),"main-nav":l(()=>[t(a.$slots,"main-nav")]),"main-content":l(()=>[t(a.$slots,"main-content")]),"main-content-after":l(()=>[t(a.$slots,"main-content-after")]),"main-nav-before":l(()=>[t(a.$slots,"main-nav-before")]),"main-nav-after":l(()=>[t(a.$slots,"main-nav-after")]),comment:l(()=>[t(a.$slots,"comment")]),footer:l(()=>[t(a.$slots,"footer")]),aside:l(()=>[t(a.$slots,"aside")]),"aside-custom":l(()=>[t(a.$slots,"aside-custom")]),default:l(()=>[t(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{$ as default};
