import{_ as m}from"./ValaxyMain.vue_vue_type_style_index_0_lang-BvyuMnyR.js";import{u as h,o as f,c as g,w as e,r as l,g as a,h as t,f as u,p}from"./app-boVvO3tb.js";import"./YunComment.vue_vue_type_style_index_0_lang-CrsBtAxv.js";import"./index-C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-CFbN6BoV.js";import"./post-nLiiti9w.js";const B={__name:"transcation-annotation-invalid-scene",setup(b,{expose:c}){const r=JSON.parse('{"title":"@Transcation注解事务不生效场景","description":"","frontmatter":{"title":"@Transcation注解事务不生效场景"},"headers":[{"level":2,"title":"数据库引擎不支持事务","slug":"数据库引擎不支持事务","link":"#数据库引擎不支持事务","children":[]},{"level":2,"title":"被注解的方法为私有方法private","slug":"被注解的方法为私有方法private","link":"#被注解的方法为私有方法private","children":[]},{"level":2,"title":"注解的方法所属的类没有被spring管理","slug":"注解的方法所属的类没有被spring管理","link":"#注解的方法所属的类没有被spring管理","children":[]},{"level":2,"title":"注解的方法被标注为final类型","slug":"注解的方法被标注为final类型","link":"#注解的方法被标注为final类型","children":[]},{"level":2,"title":"注解的属性rollbackFor异常类设置错误","slug":"注解的属性rollbackfor异常类设置错误","link":"#注解的属性rollbackfor异常类设置错误","children":[]},{"level":2,"title":"注解的属性propagation设置错误","slug":"注解的属性propagation设置错误","link":"#注解的属性propagation设置错误","children":[]},{"level":2,"title":"注解的方法内异常被手动捕获","slug":"注解的方法内异常被手动捕获","link":"#注解的方法内异常被手动捕获","children":[]},{"level":2,"title":"同一个方法内自调用，导致失效","slug":"同一个方法内自调用-导致失效","link":"#同一个方法内自调用-导致失效","children":[]},{"level":2,"title":"注解的方法内部采用了多线程调用","slug":"注解的方法内部采用了多线程调用","link":"#注解的方法内部采用了多线程调用","children":[]},{"level":2,"title":"嵌套事务导致回滚失效","slug":"嵌套事务导致回滚失效","link":"#嵌套事务导致回滚失效","children":[]}],"relativePath":"pages/posts/java-stack/spring/transcation-annotation-invalid-scene.md","path":"/home/runner/work/blog/blog/packages/valaxy-blog/pages/posts/java-stack/spring/transcation-annotation-invalid-scene.md","lastUpdated":1732447053000}'),o=h(),i=r.frontmatter||{};return o.meta.frontmatter=Object.assign(o.meta.frontmatter||{},r.frontmatter||{}),p("pageData",r),p("valaxy:frontmatter",i),globalThis.$frontmatter=i,c({frontmatter:{title:"@Transcation注解事务不生效场景"}}),(n,s)=>{const d=m;return f(),g(d,{frontmatter:u(i)},{"main-content-md":e(()=>s[0]||(s[0]=[a("h2",{id:"数据库引擎不支持事务",tabindex:"-1"},[t("数据库引擎不支持事务 "),a("a",{class:"header-anchor",href:"#数据库引擎不支持事务","aria-label":'Permalink to "数据库引擎不支持事务"'},"​")],-1),a("p",null,"mysql的ISAM不支持事务",-1),a("h2",{id:"被注解的方法为私有方法private",tabindex:"-1"},[t("被注解的方法为私有方法private "),a("a",{class:"header-anchor",href:"#被注解的方法为私有方法private","aria-label":'Permalink to "被注解的方法为私有方法private"'},"​")],-1),a("p",null,"Spring的事务代理通常是通过Java动态代理或CGLIB动态代理生成的，这些代理要求目标方法是公开可访问的（public）。私有方法无法被代理，因此事务将无效。",-1),a("h2",{id:"注解的方法所属的类没有被spring管理",tabindex:"-1"},[t("注解的方法所属的类没有被spring管理 "),a("a",{class:"header-anchor",href:"#注解的方法所属的类没有被spring管理","aria-label":'Permalink to "注解的方法所属的类没有被spring管理"'},"​")],-1),a("p",null,"比如所在类没有使用@Controller,@Service,@Componment，@Bean等注解",-1),a("p",null,"Spring的事务管理需要在Spring容器中配置的Bean上才能生效。如果目标类没有被配置为Spring Bean，那么事务将无法被应用。",-1),a("h2",{id:"注解的方法被标注为final类型",tabindex:"-1"},[t("注解的方法被标注为final类型 "),a("a",{class:"header-anchor",href:"#注解的方法被标注为final类型","aria-label":'Permalink to "注解的方法被标注为final类型"'},"​")],-1),a("p",null,"由于底层使用了动态代理，如果设置为final就表示不能生成动态代理对象",-1),a("h2",{id:"注解的属性rollbackfor异常类设置错误",tabindex:"-1"},[t("注解的属性rollbackFor异常类设置错误 "),a("a",{class:"header-anchor",href:"#注解的属性rollbackfor异常类设置错误","aria-label":'Permalink to "注解的属性rollbackFor异常类设置错误"'},"​")],-1),a("p",null,"@Transactional注解默认处理运行时异常，即只有抛出运行时异常，才会触发事务回滚。",-1),a("p",null,"默认是RuntimeException以及子类，如果需要支持其他异常需要指明在rollbackFor属性内",-1),a("h2",{id:"注解的属性propagation设置错误",tabindex:"-1"},[t("注解的属性propagation设置错误 "),a("a",{class:"header-anchor",href:"#注解的属性propagation设置错误","aria-label":'Permalink to "注解的属性propagation设置错误"'},"​")],-1),a("p",null,"默认是REQUIRE，如果设置为NOT_SUPPORT，会因为有事务抛出异常，如果是MANDATORY 则会因为外层没有事务的话导致报错",-1),a("h2",{id:"注解的方法内异常被手动捕获",tabindex:"-1"},[t("注解的方法内异常被手动捕获 "),a("a",{class:"header-anchor",href:"#注解的方法内异常被手动捕获","aria-label":'Permalink to "注解的方法内异常被手动捕获"'},"​")],-1),a("p",null,"底层是方法根据抛出的异常决定是否回滚，如果被捕获了，没有抛出，外层自然拿不到异常",-1),a("h2",{id:"同一个方法内自调用-导致失效",tabindex:"-1"},[t("同一个方法内自调用，导致失效 "),a("a",{class:"header-anchor",href:"#同一个方法内自调用-导致失效","aria-label":'Permalink to "同一个方法内自调用，导致失效"'},"​")],-1),a("h2",{id:"注解的方法内部采用了多线程调用",tabindex:"-1"},[t("注解的方法内部采用了多线程调用 "),a("a",{class:"header-anchor",href:"#注解的方法内部采用了多线程调用","aria-label":'Permalink to "注解的方法内部采用了多线程调用"'},"​")],-1),a("p",null,"根据事务底层原理，即子线程的状态，主流程线程不能影响到",-1),a("h2",{id:"嵌套事务导致回滚失效",tabindex:"-1"},[t("嵌套事务导致回滚失效 "),a("a",{class:"header-anchor",href:"#嵌套事务导致回滚失效","aria-label":'Permalink to "嵌套事务导致回滚失效"'},"​")],-1),a("p",null,"根据嵌套事务定义，内存事务回滚不会导致外层事务回滚，外层事务回滚，内存事务也会回滚",-1)])),"main-header":e(()=>[l(n.$slots,"main-header")]),"main-header-after":e(()=>[l(n.$slots,"main-header-after")]),"main-nav":e(()=>[l(n.$slots,"main-nav")]),"main-content":e(()=>[l(n.$slots,"main-content")]),"main-content-after":e(()=>[l(n.$slots,"main-content-after")]),"main-nav-before":e(()=>[l(n.$slots,"main-nav-before")]),"main-nav-after":e(()=>[l(n.$slots,"main-nav-after")]),comment:e(()=>[l(n.$slots,"comment")]),footer:e(()=>[l(n.$slots,"footer")]),aside:e(()=>[l(n.$slots,"aside")]),"aside-custom":e(()=>[l(n.$slots,"aside-custom")]),default:e(()=>[l(n.$slots,"default")]),_:3},8,["frontmatter"])}}};export{B as default};
